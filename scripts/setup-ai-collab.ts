#!/usr/bin/env bun
/**
 * AI Collaboration Setup Script
 * 
 * Installiert alles was nötig ist für Multi-AI Development:
 * - Playwright (Browser Automation)
 * - Dev Dependencies
 * - Erstellt Preview-Ordner
 * - Testet Browser-Zugriff
 */

import { mkdir, writeFile } from 'fs/promises'
import { exec } from 'child_process'
import { promisify } from 'util'

const execAsync = promisify(exec)

console.log('🤖 Toobix Unified - AI Collaboration Setup\n')

// 1. Dependencies installieren
console.log('📦 Installing dependencies...')
try {
  await execAsync('bun install', { cwd: process.cwd() })
  console.log('✅ Dependencies installed\n')
} catch (error) {
  console.error('❌ Failed to install dependencies:', error.message)
  process.exit(1)
}

// 2. Playwright installieren
console.log('🎭 Installing Playwright...')
try {
  await execAsync('bun add -D playwright @playwright/test')
  await execAsync('bunx playwright install chromium')
  console.log('✅ Playwright installed\n')
} catch (error) {
  console.error('❌ Failed to install Playwright:', error.message)
  console.log('⚠️  You can install manually: bunx playwright install chromium\n')
}

// 3. Preview-Ordner erstellen
console.log('📁 Creating preview directories...')
try {
  await mkdir('apps/web/.preview', { recursive: true })
  await mkdir('data', { recursive: true })
  
  // Placeholder files
  await writeFile('apps/web/.preview/.gitkeep', '')
  await writeFile('apps/web/.preview/README.md', `# AI Preview Files

This directory contains auto-generated previews for AI access:

- \`latest.png\` - Screenshot of current app state
- \`latest.html\` - DOM snapshot
- \`updated-at.txt\` - Last update timestamp
- \`a11y.json\` - Accessibility tree

**Auto-generated by:** \`bun run ai-watch\`
`)
  
  console.log('✅ Preview directories created\n')
} catch (error) {
  console.error('❌ Failed to create directories:', error.message)
}

// 4. Git setup
console.log('🔧 Configuring Git...')
try {
  await execAsync('git config core.ignorecase false')
  console.log('✅ Git configured\n')
} catch (error) {
  console.log('⚠️  Git not initialized yet (this is OK)\n')
}

// 5. Test Browser
console.log('🌐 Testing browser access...')
try {
  const { chromium } = await import('playwright')
  const browser = await chromium.launch({ headless: true })
  const page = await browser.newPage()
  await page.goto('about:blank')
  await browser.close()
  console.log('✅ Browser works!\n')
} catch (error) {
  console.error('⚠️  Browser test failed:', error.message)
  console.log('   You may need to run: bunx playwright install chromium\n')
}

// 6. Summary
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
console.log('✅ AI Collaboration Setup Complete!\n')
console.log('📋 Next Steps:\n')
console.log('   1. Generate database:')
console.log('      bun db:generate')
console.log('      bun db:migrate\n')
console.log('   2. Start dev server:')
console.log('      bun run dev-server\n')
console.log('   3. Start AI preview (optional):')
console.log('      bun run ai-watch\n')
console.log('   4. Open in VS Code:')
console.log('      code .\n')
console.log('🤖 All 3 AIs ready to collaborate!')
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n')
